
:root { /*this is a CSS pseudo-class that target a html element in a document and with this you can define css reusable variables to be applied across the entire document.*/
    @font-face {
        font-family: 'Karrik';
        src: url('fonts/Karrik-Regular.woff2') format('woff2'),
             url('fonts/Karrik-Regular.woff') format('woff'),
             url('fonts/Karrik-Regular.ttf') format('truetype');
      }

    /* Golden Ratio: 1.618 */
    --golden-ratio: 1.618;
    
    /* Base sizes */
    --base-font-size: 16px;
    --base-line-height: 1.5;
    --base-spacing: 1rem;
    
    /* Font sizes */
    --font-size-small: calc(var(--base-font-size) / var(--golden-ratio));
    --font-size-large: calc(var(--base-font-size) * var(--golden-ratio));
    
    /* Spacing */
    --spacing-small: calc(var(--base-spacing) / var(--golden-ratio));
    --spacing-large: calc(var(--base-spacing) * var(--golden-ratio));
    
    /* Colors */
    --primary-color: #B7B5E4;
    --secondary-color: #847979;
    --background-color: #0C0C0F;
    --accent1-color: #BBC2E2;
    --accent2-color: #CFCCD6;

    /* Reset and base styles */
  * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
  }

  body {
    font-family: "Karrik", sans-serif;
    font-weight: 200;
    font-size: var(--base-font-size);
    line-height: var(--base-line-height);
    color: var(--primary-color);
    background-color: var(--background-color);
    margin: 0 50px 50px 50px;
    overflow-x: hidden; /* it is used to hide content that overflows horizontally (beyond the width) of an element's container. */
  }

  /* Layout */
  header {
    padding: var(--spacing-large);
  }

  nav {
    display: flex;
    gap: calc(var(--spacing-large) *(var(--golden-ratio)*7));  /* Adds spacing between the direct children of <nav>. */
    justify-content: space-evenly;  /* Distributes the <nav> items evenly within the horizontal axis (main axis), ensuring thereâ€™s equal spacing on either side. */
    flex-wrap:nowrap; /* Prevents the navigation items from wrapping onto a new line */
    list-style-type: none; /* Removes default bullet points */
  }

  nav li{
    display: inline-block; /* Makes list items inline */
  }

  nav .button{
    border: 2px solid var(--primary-color);
    background-color: var(--background-color);
    border-radius: var(--spacing-small);  /* this control the the rounding of an element's corners. */
    display:flex;
    justify-content: space-between;
    padding:  var(--spacing-small) calc(var(--spacing-large) * var(--golden-ratio));
    gap: calc(var(--spacing-large) *(var(--golden-ratio)*3));
    position: fixed; /* the element is positioned relative to the viewport (the browser window), not its parent or any other ancestor: it stays in the same place on the screen even when the user scrolls the page. */
    z-index: 2; /* it controls the stacking order of elements along the z-axis (visual depth). It determines whether an element appears in front of or behind other elements. A value of 2 means that the nav. button will be on top of other elements. */
}

  a {
    text-decoration: none; /* none; Removes the default underline style from links. */
    color: var(--primary-color);
    background-color: transparent; /*  Ensures the background of the link is fully transparent */
  }

  #long-button {
    border: 2px solid var(--accent2-color);
    background-color: var(--background-color);
    color: var(--secondary-color)
  }

  #tour-button {
    background-color: var(--primary-color);
  }

  #tour-text {
    color: var(--background-color)
  }

  main {
    margin-top: calc(var(--spacing-large)*5);
    margin-bottom: calc(var(--spacing-large)*10);

  }

  .map-object_panel {
    display: flex;
  }

  .map {
      width: 100%; 
      margin-left: calc(var(--spacing-large)*2);
      padding-left: calc(var(--spacing-large)*3); 
  }

  .map img {
    padding-top: var(--spacing-large);
    width: 80%;
    height: auto;
  }

  .map h1 {
    font-size: calc(var(--base-font-size)*3);
  }

  .aside-panel {
    border: 2px solid var(--accent2-color);
    border-radius:10px;
    margin-top: calc(var(--spacing-large)*5);
    margin-right: calc(var(--spacing-large)*4);
    margin-bottom: var(--spacing-small);
    text-align: left;
    width: 30%;
    padding: var(--spacing-small) var(--spacing-small) var(--spacing-small) var(--spacing-small);
    display: flex;
    flex-direction: column;
  }

  .object-box{
    border: 2px solid var(--accent2-color);
    border-radius:10px;
    margin: var(--spacing-small) var(--spacing-small) var(--spacing-small) var(--spacing-small);
    flex: 1; 
  }
   
  .gallery {
    position: relative;
  }

  .gallery-content{
    position: relative;
    border: 2px solid var(--accent2-color);
    border-radius:10px;
    margin-top: calc(var(--spacing-large)*2);
    margin-left: calc(var(--spacing-large)*5);
    margin-right: calc(var(--spacing-large)*4);
    height: 75vh;
    padding: calc(var(--spacing-small)*2) var(--spacing-large) calc(var(--spacing-large)*2) var(--spacing-large);
    display: flex;
    gap: var(--spacing-large);
    overflow-x: hidden;
    scroll-behavior: smooth;
  }
    
  .gallery h2 {
    top:20px;   
    left: 150px;
    position: absolute;
  }

  .gallery-box {
    border: 2px solid var(--accent2-color);
    border-radius: 10px;
    margin-top: calc(var(--spacing-large)*2);
    padding: var(--spacing-small);
    background-color: var(--background-color);
    color: var(--primary-color);
    flex: 1;
    min-width: 300px;
  }

  button {
    background-color: var(--primary-color);
    border: 2px solid var(--primary-color);
    border-radius: 50%;
    color:white;
    font-size: var(--font-size-large);
    cursor: pointer;
    z-index: 2; /* Makes sure buttons are above gallery */
    position: absolute; /*  for position the buttons absolutely to the gallery container */
    top: 50%;  /* it places the top edge of the button at 50% of the parent's height. In combination with transform: translateY(-50%) this ensure that the button's center aligns with the middle of the parent. */
    transform: translateY(-50%);   /* shifts the button upwards by 50% of its own height(of the button itself). */
    padding: 10px;
    display: flex;
    justify-content: center;
    line-height: 1;
  }

  .scroll-left {
    left: 100px; /* Position left button */
  }

  .scroll-right {
    right: 80px; /* Position right button */ 
  }

  .metadata {
    position: relative;
    border: 2px solid var(--accent2-color);
    border-radius:10px;
    margin-top: calc(var(--spacing-large)*2);
    margin-left: calc(var(--spacing-large)*5);
    margin-right: calc(var(--spacing-large)*4);
    padding-left: var(--spacing-small);
    height: 75vh;
    padding: calc(var(--spacing-small)*2) var(--spacing-large) calc(var(--spacing-large)*2) var(--spacing-large);
    display: flex;
    flex-direction: column;
  }
  .metadata h2 {
    position: absolute;
     z-index: 10; /* for avoiding overlapping of <h2> with other elements-container */
  }

  .metadata .metadata-box{
    border: 2px solid var(--accent2-color);
    border-radius:10px;
    margin-top: calc(var(--spacing-large)*2);
    flex: 1;
  }

  .geolocalization {
    position: relative;
    border: 2px solid var(--accent2-color);
    border-radius:10px;
    margin-top: calc(var(--spacing-large)*2);
    margin-left: calc(var(--spacing-large)*5);
    margin-right: calc(var(--spacing-large)*4);
    padding-left: var(--spacing-small);
    height: 75vh;
    padding: calc(var(--spacing-small)*2) var(--spacing-large) calc(var(--spacing-large)*2) var(--spacing-large);
    display: flex;
    flex-direction: column;
  }

  .geolocalization h2 {
    position: absolute;
  }

  .geolocalization .geolocalization-box {
    border: 2px solid var(--accent2-color);
    border-radius:10px;
    margin-top: calc(var(--spacing-large)*2);
    flex: 1;
  }

}